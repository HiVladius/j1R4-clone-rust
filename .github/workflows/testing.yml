name: Testing

on: 
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs: 
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env: 
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_NAME_TEST: ${{ secrets.DATABASE_NAME_TEST }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}
      CORS_ORIGINS: ${{ secrets.CORS_ORIGINS }}

    steps:
        - name: Checkout code
          uses: actions/checkout@v4
        
        - name: Install Rust
          uses: dtolnay/rust-toolchain@stable
          with:
            components: rustfmt, clippy
        
        - name: Cache Rust dependencies
          uses: actions/cache@v4
          with:
            path: |
              ~/.cargo/bin/
              ~/.cargo/registry/index
              ~/.cargo/registry/cache
              ~/.cargo/git/db
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
        - name: Wait for MongoDB
          run: |
            echo "Waiting for MongoDB to be ready..."
            timeout=60
            count=0
            until nc -z localhost 27017; do
              if [ $count -ge $timeout ]; then
                echo "MongoDB failed to start within $timeout seconds"
                docker logs $(docker ps -q --filter "ancestor=mongo:7.0") || echo "No MongoDB container logs available"
                exit 1
              fi
              echo "MongoDB not ready yet... waiting (${count}s/${timeout}s)"
              sleep 2
              count=$((count + 2))
            done
            echo "MongoDB is ready!"
            
        - name: Test MongoDB connection
          run: |
            # Verificar que MongoDB responde
            timeout 10 bash -c 'until printf "" 2>>/dev/null >>/dev/tcp/localhost/27017; do sleep 1; done'
            echo "MongoDB connection verified!"
            
        - name: Check code formatting
          run: cargo fmt --all -- --check
        
        - name: Run Clippy
          run: cargo clippy --all-targets --all-features -- -D warnings
        
        - name: Build project
          run: cargo build --verbose
            
        - name: Run specific integration tests
          run: |
            cargo test comment_edit_test --verbose
            cargo test comment_integration_test --verbose
            cargo test project_edit_test --verbose
            cargo test project_integration_test --verbose
            cargo test project_membership_test --verbose
            cargo test task_creation_test --verbose
            cargo test task_edit_test --verbose
            cargo test task_read_test --verbose
          env:
            RUST_LOG: debug
            RUST_BACKTRACE: 1
